// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/message.proto

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Message struct {
	Id         string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FromUserId int64  `protobuf:"varint,2,opt,name=fromUserId" json:"fromUserId,omitempty"`
	ToUserId   int64  `protobuf:"varint,3,opt,name=toUserId" json:"toUserId,omitempty"`
	// 时间戳ms
	CreatedAt int64  `protobuf:"varint,4,opt,name=createdAt" json:"createdAt,omitempty"`
	Title     string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Message   string `protobuf:"bytes,6,opt,name=message" json:"message,omitempty"`
	Status    string `protobuf:"bytes,7,opt,name=status" json:"status,omitempty"`
	IsDelete  bool   `protobuf:"varint,8,opt,name=isDelete" json:"isDelete,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetFromUserId() int64 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *Message) GetToUserId() int64 {
	if m != nil {
		return m.ToUserId
	}
	return 0
}

func (m *Message) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *Message) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Message) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Message) GetIsDelete() bool {
	if m != nil {
		return m.IsDelete
	}
	return false
}

type MessageResponse struct {
	// 创建成功id
	Mid string `protobuf:"bytes,1,opt,name=mid" json:"mid,omitempty"`
}

func (m *MessageResponse) Reset()                    { *m = MessageResponse{} }
func (m *MessageResponse) String() string            { return proto.CompactTextString(m) }
func (*MessageResponse) ProtoMessage()               {}
func (*MessageResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *MessageResponse) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

type MessageReadRequest struct {
	// 分页
	PageNumber int32 `protobuf:"varint,1,opt,name=pageNumber" json:"pageNumber,omitempty"`
	PageSize   int32 `protobuf:"varint,2,opt,name=pageSize" json:"pageSize,omitempty"`
	// msgType: UNSEEN/SEEN/DETAIL/ALL
	MsgType    string `protobuf:"bytes,3,opt,name=msgType" json:"msgType,omitempty"`
	Id         int64  `protobuf:"varint,4,opt,name=id" json:"id,omitempty"`
	FromUserId int64  `protobuf:"varint,5,opt,name=FromUserId" json:"FromUserId,omitempty"`
	ToUserId   int64  `protobuf:"varint,6,opt,name=toUserId" json:"toUserId,omitempty"`
	Title      string `protobuf:"bytes,7,opt,name=Title" json:"Title,omitempty"`
	Message    string `protobuf:"bytes,8,opt,name=Message" json:"Message,omitempty"`
	Status     string `protobuf:"bytes,9,opt,name=status" json:"status,omitempty"`
	IsDelete   string `protobuf:"bytes,10,opt,name=isDelete" json:"isDelete,omitempty"`
}

func (m *MessageReadRequest) Reset()                    { *m = MessageReadRequest{} }
func (m *MessageReadRequest) String() string            { return proto.CompactTextString(m) }
func (*MessageReadRequest) ProtoMessage()               {}
func (*MessageReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *MessageReadRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *MessageReadRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *MessageReadRequest) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *MessageReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MessageReadRequest) GetFromUserId() int64 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *MessageReadRequest) GetToUserId() int64 {
	if m != nil {
		return m.ToUserId
	}
	return 0
}

func (m *MessageReadRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MessageReadRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *MessageReadRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MessageReadRequest) GetIsDelete() string {
	if m != nil {
		return m.IsDelete
	}
	return ""
}

type MessageListResponse struct {
	// 数量总数
	PageNumber int64      `protobuf:"varint,1,opt,name=pageNumber" json:"pageNumber,omitempty"`
	PageSize   int64      `protobuf:"varint,2,opt,name=pageSize" json:"pageSize,omitempty"`
	Nums       int64      `protobuf:"varint,3,opt,name=nums" json:"nums,omitempty"`
	MsgList    []*Message `protobuf:"bytes,4,rep,name=msgList" json:"msgList,omitempty"`
}

func (m *MessageListResponse) Reset()                    { *m = MessageListResponse{} }
func (m *MessageListResponse) String() string            { return proto.CompactTextString(m) }
func (*MessageListResponse) ProtoMessage()               {}
func (*MessageListResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *MessageListResponse) GetPageNumber() int64 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *MessageListResponse) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *MessageListResponse) GetNums() int64 {
	if m != nil {
		return m.Nums
	}
	return 0
}

func (m *MessageListResponse) GetMsgList() []*Message {
	if m != nil {
		return m.MsgList
	}
	return nil
}

type MessageDeleteRequest struct {
	// 修改id对应的msg.is_delete true
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *MessageDeleteRequest) Reset()                    { *m = MessageDeleteRequest{} }
func (m *MessageDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*MessageDeleteRequest) ProtoMessage()               {}
func (*MessageDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *MessageDeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "protos.Message")
	proto.RegisterType((*MessageResponse)(nil), "protos.MessageResponse")
	proto.RegisterType((*MessageReadRequest)(nil), "protos.MessageReadRequest")
	proto.RegisterType((*MessageListResponse)(nil), "protos.MessageListResponse")
	proto.RegisterType((*MessageDeleteRequest)(nil), "protos.MessageDeleteRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MessageService service

type MessageServiceClient interface {
	MessageCreate(ctx context.Context, in *Message, opts ...grpc.CallOption) (*MessageResponse, error)
	MessageUpdate(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	MessageRead(ctx context.Context, in *MessageReadRequest, opts ...grpc.CallOption) (*MessageListResponse, error)
	MessageDelete(ctx context.Context, in *MessageDeleteRequest, opts ...grpc.CallOption) (*MessageResponse, error)
}

type messageServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessageServiceClient(cc *grpc.ClientConn) MessageServiceClient {
	return &messageServiceClient{cc}
}

func (c *messageServiceClient) MessageCreate(ctx context.Context, in *Message, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := grpc.Invoke(ctx, "/protos.MessageService/MessageCreate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageServiceClient) MessageUpdate(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := grpc.Invoke(ctx, "/protos.MessageService/MessageUpdate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageServiceClient) MessageRead(ctx context.Context, in *MessageReadRequest, opts ...grpc.CallOption) (*MessageListResponse, error) {
	out := new(MessageListResponse)
	err := grpc.Invoke(ctx, "/protos.MessageService/MessageRead", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *messageServiceClient) MessageDelete(ctx context.Context, in *MessageDeleteRequest, opts ...grpc.CallOption) (*MessageResponse, error) {
	out := new(MessageResponse)
	err := grpc.Invoke(ctx, "/protos.MessageService/MessageDelete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MessageService service

type MessageServiceServer interface {
	MessageCreate(context.Context, *Message) (*MessageResponse, error)
	MessageUpdate(context.Context, *Message) (*Message, error)
	MessageRead(context.Context, *MessageReadRequest) (*MessageListResponse, error)
	MessageDelete(context.Context, *MessageDeleteRequest) (*MessageResponse, error)
}

func RegisterMessageServiceServer(s *grpc.Server, srv MessageServiceServer) {
	s.RegisterService(&_MessageService_serviceDesc, srv)
}

func _MessageService_MessageCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).MessageCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.MessageService/MessageCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).MessageCreate(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageService_MessageUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).MessageUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.MessageService/MessageUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).MessageUpdate(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageService_MessageRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).MessageRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.MessageService/MessageRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).MessageRead(ctx, req.(*MessageReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MessageService_MessageDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageServiceServer).MessageDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.MessageService/MessageDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageServiceServer).MessageDelete(ctx, req.(*MessageDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.MessageService",
	HandlerType: (*MessageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MessageCreate",
			Handler:    _MessageService_MessageCreate_Handler,
		},
		{
			MethodName: "MessageUpdate",
			Handler:    _MessageService_MessageUpdate_Handler,
		},
		{
			MethodName: "MessageRead",
			Handler:    _MessageService_MessageRead_Handler,
		},
		{
			MethodName: "MessageDelete",
			Handler:    _MessageService_MessageDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/message.proto",
}

func init() { proto.RegisterFile("protos/message.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xcf, 0x6e, 0xd4, 0x30,
	0x10, 0xc6, 0x9b, 0x64, 0xb3, 0x7f, 0xa6, 0x6a, 0x0b, 0xc3, 0x0a, 0xac, 0xa5, 0x42, 0xab, 0x54,
	0x42, 0xcb, 0x65, 0x91, 0xda, 0x23, 0x27, 0x0a, 0xaa, 0x40, 0x02, 0x0e, 0x69, 0xfb, 0x00, 0xe9,
	0x66, 0x58, 0x45, 0x34, 0x4d, 0x88, 0x1d, 0x24, 0x78, 0x0a, 0x4e, 0x1c, 0x78, 0x31, 0x5e, 0x07,
	0x79, 0xec, 0x75, 0x52, 0xb7, 0xdd, 0x5b, 0xbe, 0xf9, 0xec, 0x8c, 0xbf, 0x9f, 0x47, 0x86, 0x69,
	0xdd, 0x54, 0xaa, 0x92, 0xaf, 0x4b, 0x92, 0x32, 0x5b, 0xd3, 0x92, 0x25, 0x0e, 0x4d, 0x35, 0xf9,
	0x17, 0xc0, 0xe8, 0xb3, 0x71, 0x70, 0x1f, 0xc2, 0x22, 0x17, 0xc1, 0x3c, 0x58, 0x4c, 0xd2, 0xb0,
	0xc8, 0xf1, 0x05, 0xc0, 0xd7, 0xa6, 0x2a, 0x2f, 0x25, 0x35, 0x1f, 0x73, 0x11, 0xce, 0x83, 0x45,
	0x94, 0xf6, 0x2a, 0x38, 0x83, 0xb1, 0xaa, 0xac, 0x1b, 0xb1, 0xeb, 0x34, 0x1e, 0xc2, 0x64, 0xd5,
	0x50, 0xa6, 0x28, 0x7f, 0xab, 0xc4, 0x80, 0xcd, 0xae, 0x80, 0x53, 0x88, 0x55, 0xa1, 0xae, 0x49,
	0xc4, 0xdc, 0xcc, 0x08, 0x14, 0x30, 0xb2, 0x87, 0x14, 0x43, 0xae, 0x6f, 0x24, 0x3e, 0x85, 0xa1,
	0x54, 0x99, 0x6a, 0xa5, 0x18, 0xb1, 0x61, 0x95, 0x3e, 0x41, 0x21, 0xdf, 0xd3, 0x35, 0x29, 0x12,
	0xe3, 0x79, 0xb0, 0x18, 0xa7, 0x4e, 0x27, 0x47, 0x70, 0x60, 0x83, 0xa5, 0x24, 0xeb, 0xea, 0x46,
	0x12, 0x3e, 0x82, 0xa8, 0x74, 0x09, 0xf5, 0x67, 0xf2, 0x37, 0x04, 0x74, 0xab, 0xb2, 0x3c, 0xa5,
	0xef, 0x2d, 0x49, 0xa5, 0x93, 0xd7, 0xd9, 0x9a, 0xbe, 0xb4, 0xe5, 0x15, 0x35, 0xbc, 0x3e, 0x4e,
	0x7b, 0x15, 0xdd, 0x57, 0xab, 0xf3, 0xe2, 0x17, 0x31, 0x97, 0x38, 0x75, 0x9a, 0x53, 0xc8, 0xf5,
	0xc5, 0xcf, 0x9a, 0x18, 0x8a, 0x4e, 0x61, 0xa4, 0xe5, 0x6b, 0x60, 0x58, 0xbe, 0x67, 0x1d, 0xdf,
	0xd8, 0xf0, 0x3d, 0xbb, 0x9f, 0xef, 0xd0, 0xe3, 0x3b, 0x85, 0xf8, 0x82, 0x09, 0x1a, 0x20, 0x46,
	0xe8, 0xde, 0x36, 0x0d, 0xe3, 0x98, 0xa4, 0xee, 0x6e, 0x3b, 0x82, 0x93, 0x07, 0x09, 0x02, 0x3b,
	0x1d, 0xc1, 0xdf, 0x01, 0x3c, 0xb1, 0xfb, 0x3f, 0x15, 0x52, 0x39, 0x8c, 0x77, 0xe9, 0x44, 0x5b,
	0xe9, 0x44, 0x3d, 0x3a, 0x08, 0x83, 0x9b, 0xb6, 0x94, 0x76, 0x5e, 0xf8, 0x1b, 0x5f, 0x31, 0x31,
	0xdd, 0x42, 0x0c, 0xe6, 0xd1, 0x62, 0xf7, 0xf8, 0xc0, 0x0c, 0xa9, 0x5c, 0x6e, 0xae, 0x66, 0xe3,
	0x27, 0x2f, 0x61, 0x6a, 0x6b, 0xe6, 0x8c, 0x9b, 0x0b, 0xf3, 0x46, 0xf7, 0xf8, 0x4f, 0x08, 0xfb,
	0x76, 0xe1, 0x39, 0x35, 0x3f, 0x8a, 0x15, 0xe1, 0x1b, 0xd8, 0xb3, 0x95, 0x77, 0x3c, 0x87, 0xe8,
	0x77, 0x99, 0x3d, 0xf3, 0xdb, 0xda, 0xc0, 0xc9, 0x0e, 0x9e, 0xb8, 0xcd, 0x97, 0x75, 0x7e, 0xef,
	0x66, 0xbf, 0x90, 0xec, 0xe0, 0x07, 0xd8, 0xed, 0xcd, 0x16, 0xce, 0xee, 0xfc, 0xde, 0x0d, 0xdc,
	0xec, 0xb9, 0xe7, 0xf5, 0x79, 0xf3, 0x9f, 0xf6, 0x6e, 0xc5, 0xc6, 0x43, 0x6f, 0xfd, 0x2d, 0x1a,
	0x5b, 0x82, 0x9c, 0x1e, 0xc1, 0xe3, 0x55, 0x55, 0x2e, 0xb3, 0xfa, 0x5b, 0xdd, 0x36, 0xf6, 0x31,
	0x38, 0xf5, 0x50, 0x5d, 0x99, 0xc7, 0xe1, 0xe4, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xca, 0xb3,
	0x72, 0x36, 0x3b, 0x04, 0x00, 0x00,
}
